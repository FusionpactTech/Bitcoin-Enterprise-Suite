[package]
name = "aicrm-sdk"
description = "AI-Driven Compliance & Risk Management Platform SDK - Intelligent compliance automation for Bitcoin operations"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
readme = "README.md"

[lib]
name = "aicrm_sdk"
path = "src/lib.rs"

[dependencies]
# Workspace dependencies
bitcoin = { workspace = true }
secp256k1 = { workspace = true }
bitcoin_hashes = { workspace = true }

# Machine Learning - temporarily disabled due to edition2024 conflicts
# candle-core = { workspace = true, optional = true }
# candle-nn = { workspace = true, optional = true }
# candle-transformers = { workspace = true, optional = true }
# smartcore = { workspace = true, optional = true }

# HTTP and web - temporarily disabled
# reqwest = { workspace = true }
# axum = { workspace = true }
# tower = { workspace = true }
# tower-http = { workspace = true }

# Database - temporarily disabled
# sqlx = { workspace = true }
# redis = { workspace = true }

# Async and concurrency
tokio = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
rayon = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Monitoring
tracing = { workspace = true }
metrics = { workspace = true }
prometheus = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Utilities
uuid = { workspace = true }
chrono = { workspace = true }
hex = { workspace = true }
itertools = { workspace = true }

# Configuration
config = { workspace = true }
clap = { workspace = true }

[dev-dependencies]
tokio-test = "0.4"
mockall = { workspace = true }
proptest = { workspace = true }
criterion = "0.7"

[features]
default = ["std"]
std = []
# ml = ["candle-core", "candle-nn", "smartcore"]  # Temporarily disabled
real-time = []
reporting = []
analytics = []

[[bench]]
name = "risk_scoring"
harness = false

[[bench]]
name = "ml_inference"
harness = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]