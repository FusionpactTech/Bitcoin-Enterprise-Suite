searchState.loadedDescShard("aicrm_sdk", 0, "AICRM-SDK - AI-Driven Compliance &amp; Risk Management …\nA Bitcoin address.\nMainnet Bitcoin.\nMaximum transaction weight for Bitcoin Core 25.0.\nThis is used as a “null txout” in consensus signing …\nThe cryptocurrency network to act on.\nBitcoin’s regtest network.\nBitcoin’s signet network.\nBitcoin’s testnet network.\nBitcoin transaction.\nBitcoin transaction output.\nLibrary version\nGets the address type of the address.\nAnalytics for AICRM-SDK\nReturns a reference to the unchecked address, which is …\nMarks, without any additional checks, network of this …\nReturns a reference to the checked address. This function …\nReturns the base transaction size.\nReturn the network’s chain hash (genesis block hash).\nCompliance automation for AICRM-SDK\nError types for AICRM-SDK\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Network</code> from the chain hash (genesis block hash).\nConverts a <code>bitcoind -chain</code> argument name to its equivalent …\nCreates a <code>Network</code> from the magic bytes.\nConstructs an <code>Address</code> from an output script (<code>scriptPubkey</code>).\nInitialize AICRM-SDK with default configuration\nList of transaction inputs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtracts and returns the network and payload components of …\nReturns true if this <code>Transaction</code>’s absolute timelock is …\nChecks if this is a coinbase transaction.\nChecks if this is a coinbase transaction.\nReturns <code>true</code> if the transaction itself opted in to be …\nReturns <code>true</code> if this transactions nLockTime is enabled (…\nReturns true if the given pubkey is directly related to …\nReturns true if the supplied xonly public key can be used …\nChecks whether or not the address is following Bitcoin …\nParsed addresses do not always have <em>one</em> network. The …\nBlock height or timestamp. Transaction cannot be included …\nReturn the network magic bytes, which should be encoded …\nReturns true if the address creates a particular script …\nCreates a <code>TxOut</code> with given script and the smallest …\nMachine learning models for AICRM-SDK\nTransaction monitoring for AICRM-SDK\nReturns a reference to the network of this address.\nCreate new address from given components, infering the …\nComputes a “normalized TXID” which does not include …\nList of transaction outputs.\nCreates a pay to (compressed) public key hash address from …\nCreates a pay to script hash P2SH address from a script.\nCreates a pay to script address that embeds a witness pay …\nCreates a pay to script address that embeds a witness pay …\nCreates a pay to taproot address from an untweaked key.\nCreates a pay to taproot address from a pre-tweaked output …\nCreates a witness pay to public key address from a public …\nCreates a witness pay to script hash address.\nReturns a reference to the payload of this address.\nCommon imports and types for AICRM-SDK users\nReporting functionality for AICRM-SDK\nChecks whether network of this address is as required.\nRisk analysis for AICRM-SDK\nGenerates a script pubkey spending to this address.\nThe script which must be satisfied for the output to be …\nReturns an iterator over lengths of <code>script_pubkey</code>s in the …\nReturns the total number of bytes that this output …\nReturns the size of this transaction excluding the witness …\nConverts a <code>Network</code> to its equivalent <code>bitcoind -chain</code> …\nCreates a URI string <em>bitcoin:address</em> optimized to be …\nCounts the total number of sigops.\nReturns the total transaction size.\nComputes the <code>Txid</code>.\nThe value of the output, in satoshis.\nThe protocol version, is currently expected to be 1 or 2 …\nReturns the “virtual size” (vsize) of this transaction.\nThe weight of this output.\nReturns the weight of this transaction, as defined by …\nComputes the segwit version of the transaction id.\nAdvanced analytics engine for transaction analysis\nDashboard interface\nReport representation\nAnalyze patterns\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new analytics engine\nAML check implementation\nAutomated compliance engine for regulatory requirements\nKYC verification\nCheck compliance\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new compliance engine\nData analytics errors\nBitcoin library errors\nCompliance check errors\nDatabase errors\nContains the error value\nMain error type for AICRM-SDK operations\nGeneric errors\nHTTP errors\nMachine learning model errors\nTransaction monitoring errors\nContains the success value\nReporting errors\nResult type alias for AICRM-SDK operations\nRisk analysis errors\nCreate a new compliance error\nReturns the argument unchanged.\nCreate a new generic error\nCalls <code>U::from(self)</code>.\nCreate a new risk analysis error\nMachine learning model for AI-driven analysis\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new ML model\nPredict using the model\nTrain the model\nAlert manager\nReal-time transaction monitoring system\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new transaction monitor\nStart monitoring\nAutomated report generation for compliance and analytics\nReturns the argument unchanged.\nGenerate compliance report\nCalls <code>U::from(self)</code>.\nCreate a new report generator\nAI-driven risk analysis for Bitcoin transactions\nBuilder for risk analyzer\nRisk model definition\nRisk score representation\nAnalyze transaction risk\nBuild the analyzer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new risk analyzer\nSet ML model\nSet threshold")